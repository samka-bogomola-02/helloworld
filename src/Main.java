import java.util.Arrays;
public class Main {
    public static void main(String[] args) {
    /* Задача 1. Объявите три массива:
    1.1 Целочисленный массив, заполненный тремя цифрами — 1, 2 и 3 — с помощью ключевого слова new.*/
        int[] w = new int[3];
        w[0] = 1;
        w[1] = 2;
        w[2] = 3;
    // 1.2 Массив, в котором можно хранить три дробных числа — 1.57, 7.654, 9.986. Массив сразу заполните значениями.
        double[] q = new double[] {1.57, 7.654, 9.986};
    /* 1.3 Произвольный массив. Тип и количество данных определите сами.
    Самостоятельно выберите способ создания массива: с помощью ключевого слова или сразу заполненный элементами.*/
        boolean[] e = new boolean[] {true, false, true, true};
    /* Задача 2. Распечатайте на отдельной строчке элементы каждого массива по порядку через запятую.
    В конце строки запятую ставить не надо.*/
        System.out.println(w[0] + ", " + w[1] + ", " + w[2]);
        System.out.println(q[0] + ", " + q[1] + ", " + q[2]);
        System.out.println(e[0] + ", " + e[1] + ", " + e[2] + ", " + e[3]);
    /* Задача 3. Распечатайте на отдельной строчке элементы каждого массива в обратном порядке через запятую.
    В конце строки запятую ставить не надо.*/
        for (int i = w.length - 1; i >= 0; i--){
            if (i == 0){
                System.out.println(w[i]);
            } else {
            System.out.print(w[i] + ", ");
            }
        }
        for (int i = q.length - 1; i >= 0; i--){
            if (i == 0){
                System.out.println(q[i]);
            } else {
                System.out.print(q[i] + ", ");
            }
        }
        for (int i = e.length - 1; i >= 0; i--){
            if (i == 0){
                System.out.println(true);
            } else {
                System.out.print(e[i] + ", ");
            }
        }
    /* Задача 4. Пройдитесь по первому целочисленному массиву
    и все нечетные числа в нем сделайте четными (нужно прибавить 1).*/
        for (int i = 0; i < w.length; i++){
            if (w[i] % 2 != 0){
                w[i]++;
            }
        }
        System.out.print(w[0] + ", " + w[1] + ", " + w[2]);
    }
}